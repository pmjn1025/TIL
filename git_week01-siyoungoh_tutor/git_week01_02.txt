2. 원격Repo란...

-핵심 쏙쏙 깃 1주차 강의내용 중-

원격 repo 사용하기 - 개념탑재

원격 repo와 로컬 repo 가 뭐예요?

내 컴퓨터에 저장된 Git 프로젝트는 오직 이 컴퓨터에서 나만 볼 수 있는 걸까요? 아닙니다! 다른 사람과 공유하고 다른 사람도 볼
수 있어야 Git 으로 협업할 수 있겠죠!

'Git으로 관리되는 프로젝트' 를 Git 에서는 repo(리포, repository 리포지토리의 약자) 라고 부릅니다.
내 컴퓨터에 저장되어있는 리포지토리를 로컬 repo(local repository) 라고 합니다. Github 처럼 다른 곳에서 접속할 수 있는
공간에 저장되어있는 것을 원격 repo(remote repository) 라고 합니다.

Github은 원격 repo 가 저장되어있고 + 개발자 커뮤니티 기능을 하는 서비스입니다. 우리는 Github 을 사용해서 원격 repo 를
만들고 관리해볼게요!

원격 repo 와 로컬 repo 같이 사용한다는 것은?

먼저 one drive, google drive 같은 클라우드 서비스를 사용하는 걸 생각해볼게요. 클라우드에 있는 폴더를 내 컴퓨터에 있는
폴더를 연결해서 동기화해두면 내 컴퓨터 폴더의 내용이 자동으로 클라우드 폴더와 똑같아지죠?

Git 도 클라우드 서비스로 두 군데의 내용을 동기화한 것처럼 원격 repo와 로컬 repo 를 연결시켜서 내용을 반영시킬 수 있어요.
로컬 repo 가 원격 repo 를 연결하는 것을 추적(Tracking, 트랙킹 / branch tracking) 이라고 해요.

로컬 repo 만이 내가 어떤 원격 repo 와 연결되어있는지를 알고 있어요. 원격 repo 는 내가 어떤 로컬 repo 와 연결되어있
는지 정보를 가지고 있지 않아요. 언제나 로컬 repo 를 기준으로 동작을 이해해주세요!

단! 클라우드 서비스와 다르게 작업내역 즉, commit을 자동으로 반영하지 않습니다! 내가 원하는 대로 어디 commit 까지만 반
영할지를 수동으로 설정할 수 있게 해서 프로젝트를 더 잘 관리하기 위해서입니다!

협업할 때 특히 commit 을 원하는만큼 반영하는 것이 필요해요! 만약 commit 이 자동으로 반영된다면 아래처럼 같이 협업
할 때 누구는 요리법 수정을 했고, 누구는 요리법 삭제를 했는데 둘 중에 어떤 내용을 반영해야할지 난감하겠죠?

로컬 repo 의 commit 들을 원격 repo 에 반영하는 것을 push(푸쉬)이라고 해요. commit들을 밀어넣기!
원격 repo 의 commit 들을 로컬 repo 에 반영하는 것을 pull(풀) 이라고 해요. commit들을 땡겨오기!
로컬 repo 를 기준으로 생각하면 되겠죠? 나(로컬 repo)의 내용을 보내주는 거니까 push! 나(로컬 repo)로 내용을 땡겨오는 거
니까 pull! --> 용어를 이해하기 로컬Repo입장에서 생각해보자!!!!

원격 repo 를 내 컴퓨터에서도 사용할 수 있도록 가져올 수도 있어요. 일종의 초기 다운로드라고 생각하면 됩니다. 이걸
clone(클론, 복제) 라고 해요
